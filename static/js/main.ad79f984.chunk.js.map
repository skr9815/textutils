{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","role","onClick","toggle","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","cols","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","prototype","PropTypes","string","isRequired","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0OAKe,SAASA,EAAOC,GAC7B,OAEE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,KAA3D,KAAd,SACE,sBAAKD,UAAU,kBAAf,UACE,oBAAGA,UAAU,eAAeE,KAAK,IAAjC,UAAsCH,EAAMI,MAA5C,OACA,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAGJ,sBAAKI,MAAK,sCAAgD,SAAfP,EAAME,KAAiB,QAAQ,QAA1E,UACE,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWG,KAAK,SAASC,QAAST,EAAMU,OAAQJ,GAAG,2BAC5F,wBAAOL,UAAU,oBAAoBU,QAAQ,yBAA7C,UAAsF,SAAfX,EAAME,KAAiB,QAAQ,OAAtG,sBCnBG,SAASU,EAASZ,GACjC,IAmBA,EAAsBa,mBAAS,IAA/B,mBAAMC,EAAN,KAAWC,EAAX,KAII,OACI,8BACI,sBAAKd,UAAU,OAAOe,MAAO,CAACC,MAAsB,UAAfjB,EAAME,KAAkB,QAAU,SAAvE,UACI,+BAAKF,EAAMkB,QAAX,QACA,0BAAUjB,UAAU,oBAAoBkB,MAAQL,EAAME,MAAO,CAACI,gBAAgC,SAAfpB,EAAME,KAAiB,UAAY,QAAQe,MAAsB,UAAfjB,EAAME,KAAkB,QAAU,SAAYmB,SA3BlL,SAACC,GAEVP,EAAQO,EAAMC,OAAOJ,QAyBqLb,GAAG,QAAQkB,KAAK,KAAKC,KAAK,MACxN,wBAAQxB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,QAAS,QAAWO,QAxB7E,WACT,IAAIiB,EAAWZ,EAAKa,cACpBZ,EAAQW,IAsBI,kCACA,wBAAQzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,QAAS,OAA9C,SAA8DO,QArBlF,WACT,IAAIiB,EAAWZ,EAAKc,cACpBb,EAAQW,IAmBI,kCACA,wBAAQzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,QAAS,OAA9C,SAA+DO,QAlBlF,WACV,IAAIiB,EAAWG,SAASC,eAAe,SACvCJ,EAAQK,SACRC,UAAUC,UAAUC,UAAUR,EAAQP,QAe1B,uBAGJ,oDACA,oDAAuB,KAAML,EAAKqB,MAAM,KAAKC,UAC7C,8CAAiBtB,EAAKsB,UACtB,0CAAatB,EAAKqB,MAAM,OAAOC,UAC/B,yCACA,4BAAItB,SDXhBf,EAAOsC,UAAY,CACjBjC,MAAOkC,IAAUC,OAAOC,YEkBXC,MAjCf,WACE,MAAwB5B,mBAAS,SAAjC,mBAAOX,EAAP,KAAawC,EAAb,KAYA,OACE,qCAEE,cAAC3C,EAAD,CAAQK,MAAM,YAAYF,KAAOA,EAAMQ,OAb5B,WACD,SAATR,GACDwC,EAAQ,SACRb,SAASc,KAAK3B,MAAMI,gBAAkB,UAEtCsB,EAAQ,QACRb,SAASc,KAAK3B,MAAMI,gBAAkB,YAStC,qBAAKnB,UAAU,iBAAf,SAGI,cAACW,EAAD,CAAUM,QAAQ,oCAAqChB,KAAOA,UC1BzD0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAASC,eAAe,SAM1Bc,M","file":"static/js/main.ad79f984.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Navbar(props) {  \r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}.</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n          </ul>\r\n          <div class={`form-check form-switch text-${props.mode === \"dark\"? \"light\":\"dark\"}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggle} id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">{props.mode === \"dark\"? \"Light\":\"Dark\"} Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n \r\n}\r\n\r\n\r\n","\r\nimport React,{useState}  from 'react';\r\n\r\nexport default function TextForm(props) {\r\nconst hOnC = (event)=>{\r\n    \r\n    setText(event.target.value)\r\n}\r\nconst hUpC = ()=>{\r\n    let newText =  text.toUpperCase();\r\n    setText(newText);\r\n}\r\nconst hLoC = ()=>{\r\n    let newText =  text.toLowerCase();\r\n    setText(newText);\r\n}\r\nconst hCopy = ()=>{\r\n    let newText =  document.getElementById(\"myBox\");\r\n    newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n}\r\n \r\n    \r\nconst[text,setText] = useState('');\r\n \r\n\r\n   \r\n    return (\r\n        <div>\r\n            <div className=\"mb-5\" style={{color :props.mode === \"light\"? \"black\" : \"white\"}}>\r\n                <h1>{props.heading}  </h1>\r\n                <textarea className=\"form-control my-3\" value ={text} style={{backgroundColor :props.mode === \"dark\"? \"#141414\" : \"white\",color :props.mode === \"light\"? \"black\" : \"white\"} }  onChange={hOnC}id=\"myBox\" cols=\"15\" rows=\"8\" ></textarea>\r\n                <button className={`btn btn-${props.mode === \"dark\" ? \"light\" :\"dark\"}` } onClick={hUpC} >Convert to Uppercase</button>\r\n                <button className={`btn btn-${props.mode === \"dark\" ? \"light\" :\"dark\"} mx-3` } onClick={hLoC} >Convert to Lowercase</button>\r\n                <button className={`btn btn-${props.mode === \"dark\" ? \"light\" :\"dark\"} mx-3` }  onClick={hCopy} >Copy Text</button>\r\n            \r\n            \r\n            <h2 > Your Text Summary</h2>\r\n            <h4>Time to read it : {0.008*text.split(\" \").length}</h4>\r\n            <h6>Character : {text.length}</h6>\r\n            <h6>Words : {text.split(/\\s+/).length}</h6>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\nimport React, { useState } from 'react';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const toggle = ()=>{\n    if(mode === \"dark\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white'\n    }else{\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'black'\n    }\n\n  }\n  return (\n    <>\n    \n      <Navbar title=\"TextUtils\" mode ={mode} toggle={toggle} />\n     \n      <div className=\"container my-3\">\n      \n          \n          <TextForm heading=\"Enter the text to Anylize Below :\"  mode ={mode} /> \n        \n          \n        </div>\n\n      \n      \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}